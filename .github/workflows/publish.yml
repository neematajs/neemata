on:
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Log in to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
          echo "Logged in to npm as ${NPM_USERNAME}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Set version
        run: |
          pnpm run build
          pnpm version $(pnpm --silent publish-args version ${{ github.event.release.tag_name }}) --no-commit-hooks --no-git-tag-version --silent || true
          pnpm -r exec cp ../../README.md ./
          pnpm -r exec cp ../../LICENSE.md ./

      - name: Publish
        run: |
          pnpm install
          pnpm publish --dry-run --filter "*" --access public --no-git-checks --tag=$(pnpm --silent publish-args tag ${{ github.event.release.tag_name }})
          pnpm publish --filter "*" --access public --no-git-checks --tag=$(pnpm --silent publish-args tag ${{ github.event.release.tag_name }})